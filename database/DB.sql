-- MySQL Script generated by MySQL Workbench
-- Tue Oct  3 00:52:29 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema core
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema core
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `core` DEFAULT CHARACTER SET utf8 ;
USE `core` ;

-- -----------------------------------------------------
-- Table `core`.`fabricante`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`fabricante` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`contacto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`contacto` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `foto` VARCHAR(255) NULL,
  `nombre` VARCHAR(255) NULL,
  `ap_paterno` VARCHAR(255) NULL,
  `ap_materno` VARCHAR(255) NULL,
  `sexo` VARCHAR(45) NULL,
  `f_nacimiento` DATETIME NULL,
  `profesion` VARCHAR(255) NULL,
  `estado_civil` VARCHAR(45) NULL,
  `estado` ENUM('completo', 'iniciado') NULL,
  `desc_contacto` VARCHAR(255) NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `deleted_at` TIMESTAMP NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`users` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(60) NOT NULL,
  `role` ENUM('cliente', 'empleado', 'empresario', 'core') NOT NULL,
  `remember_token` VARCHAR(100) NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `deleted_at` TIMESTAMP NULL,
  `contacto_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_users_contacto1_idx` (`contacto_id` ASC),
  CONSTRAINT `fk_users_contacto1`
    FOREIGN KEY (`contacto_id`)
    REFERENCES `core`.`contacto` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_unicode_ci;


-- -----------------------------------------------------
-- Table `core`.`oferta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`oferta` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `regla_porciento` DECIMAL(10,0) NULL,
  `tipo_oferta` ENUM('+', '-') NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`producto` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `codigo_producto` VARCHAR(255) NOT NULL,
  `cantidad_disponible` INT NOT NULL,
  `nombre` VARCHAR(255) NOT NULL,
  `slug` VARCHAR(255) NOT NULL,
  `precio` DECIMAL(12,2) NOT NULL,
  `desc_producto` LONGTEXT NOT NULL,
  `estado` ENUM('0', '1') NOT NULL,
  `fabricante_id` INT NOT NULL,
  `oferta_id` INT NOT NULL,
  `users_id` INT(10) UNSIGNED NOT NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `deleted_at` TIMESTAMP NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_producto_fabricante1_idx` (`fabricante_id` ASC),
  INDEX `fk_producto_users1_idx` (`users_id` ASC),
  INDEX `fk_producto_oferta1_idx` (`oferta_id` ASC),
  CONSTRAINT `fk_producto_fabricante1`
    FOREIGN KEY (`fabricante_id`)
    REFERENCES `core`.`fabricante` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_producto_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `core`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_producto_oferta1`
    FOREIGN KEY (`oferta_id`)
    REFERENCES `core`.`oferta` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `core`.`categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`categoria` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `core`.`producto_has_categorias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`producto_has_categorias` (
  `producto_id` INT NOT NULL,
  `categorias_id` INT NOT NULL,
  PRIMARY KEY (`producto_id`, `categorias_id`),
  INDEX `fk_producto_has_categorias_categorias1_idx` (`categorias_id` ASC),
  INDEX `fk_producto_has_categorias_producto_idx` (`producto_id` ASC),
  CONSTRAINT `fk_producto_has_categorias_producto`
    FOREIGN KEY (`producto_id`)
    REFERENCES `core`.`producto` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_producto_has_categorias_categorias1`
    FOREIGN KEY (`categorias_id`)
    REFERENCES `core`.`categoria` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`producto_has_categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`producto_has_categoria` (
  `producto_id` INT NOT NULL,
  `categoria_id` INT NOT NULL,
  PRIMARY KEY (`producto_id`, `categoria_id`),
  INDEX `fk_producto_has_categoria_categoria1_idx` (`categoria_id` ASC),
  INDEX `fk_producto_has_categoria_producto1_idx` (`producto_id` ASC),
  CONSTRAINT `fk_producto_has_categoria_producto1`
    FOREIGN KEY (`producto_id`)
    REFERENCES `core`.`producto` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_producto_has_categoria_categoria1`
    FOREIGN KEY (`categoria_id`)
    REFERENCES `core`.`categoria` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `core`.`sistema_pago`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`sistema_pago` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `core`.`orden_envio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`orden_envio` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `fecha` DATETIME NOT NULL,
  `direccion_envio` VARCHAR(255) NOT NULL,
  `telefono_envio` VARCHAR(255) NOT NULL,
  `sistema_pago_id` INT NOT NULL,
  `pais_envio_id` INT NOT NULL,
  `ciudad_envio_id` INT NOT NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `deleted_at` TIMESTAMP NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_orden_sistema_pago1_idx` (`sistema_pago_id` ASC),
  CONSTRAINT `fk_orden_sistema_pago1`
    FOREIGN KEY (`sistema_pago_id`)
    REFERENCES `core`.`sistema_pago` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `core`.`contact_address`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`contact_address` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `desc_dir` VARCHAR(45) NULL,
  `calle` VARCHAR(45) NULL,
  `numero_dir` INT NULL,
  `piso_edificio` INT NULL,
  `ciudad` VARCHAR(45) NULL,
  `cp` VARCHAR(45) NULL,
  `estado_dir` VARCHAR(45) NULL,
  `pais` VARCHAR(45) NULL,
  `contacto_id` INT NOT NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `deleted_at` TIMESTAMP NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_direccion_contacto1_idx` (`contacto_id` ASC),
  CONSTRAINT `fk_direccion_contacto1`
    FOREIGN KEY (`contacto_id`)
    REFERENCES `core`.`contacto` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`empresa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`empresa` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `users_id` INT(10) UNSIGNED NOT NULL,
  `estado` ENUM('0', '1') NULL,
  `logo` VARCHAR(255) NULL,
  `nombre` VARCHAR(255) NULL,
  `slogan` VARCHAR(255) NULL,
  `rfc` VARCHAR(255) NULL,
  `pagina_web` VARCHAR(255) NULL,
  `giro_empresa` VARCHAR(255) NULL,
  `sector` VARCHAR(255) NULL,
  `direccion` VARCHAR(255) NULL,
  `tel` VARCHAR(255) NULL,
  `fax` VARCHAR(255) NULL,
  `correo` VARCHAR(255) NULL,
  `idioma` VARCHAR(255) NULL,
  `pais` VARCHAR(255) NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `deleted_at` TIMESTAMP NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_empresa_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_empresa_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `core`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`tienda`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`tienda` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `estado` ENUM('0', '1') NOT NULL,
  `nombre` VARCHAR(255) NOT NULL,
  `foto` VARCHAR(255) NOT NULL,
  `store_route` VARCHAR(255) NOT NULL,
  `store_route_platilla` VARCHAR(255) NOT NULL,
  `desc` VARCHAR(1000) NOT NULL,
  `empresa_id` INT NOT NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `deleted_at` TIMESTAMP NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_tienda_empresa1_idx` (`empresa_id` ASC),
  UNIQUE INDEX `store_route_UNIQUE` (`store_route` ASC),
  CONSTRAINT `fk_tienda_empresa1`
    FOREIGN KEY (`empresa_id`)
    REFERENCES `core`.`empresa` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`venta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`venta` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `coden_code` VARCHAR(255) NULL,
  `sistema_pago_id` INT NOT NULL,
  `users_id` INT(10) UNSIGNED NOT NULL,
  `contact_address_id` INT NOT NULL,
  `empresa_id` INT NOT NULL,
  `tienda_id` INT NOT NULL,
  `estado` VARCHAR(255) NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `deleted_at` TIMESTAMP NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_venta_users1_idx` (`users_id` ASC),
  INDEX `fk_ventas_sistema_pago1_idx` (`sistema_pago_id` ASC),
  INDEX `fk_ventas_contact_address1_idx` (`contact_address_id` ASC),
  INDEX `fk_ventas_empresa1_idx` (`empresa_id` ASC),
  INDEX `fk_ventas_tienda1_idx` (`tienda_id` ASC),
  CONSTRAINT `fk_venta_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `core`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ventas_sistema_pago1`
    FOREIGN KEY (`sistema_pago_id`)
    REFERENCES `core`.`sistema_pago` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ventas_contact_address1`
    FOREIGN KEY (`contact_address_id`)
    REFERENCES `core`.`contact_address` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ventas_empresa1`
    FOREIGN KEY (`empresa_id`)
    REFERENCES `core`.`empresa` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ventas_tienda1`
    FOREIGN KEY (`tienda_id`)
    REFERENCES `core`.`tienda` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`orden_detalle`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`orden_detalle` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `ventas_id` INT NOT NULL,
  `producto_id` INT NOT NULL,
  `producto_nombre` VARCHAR(255) NOT NULL,
  `producto_precio_base` DECIMAL(12,2) NOT NULL,
  `producto_precio_final` DECIMAL(12,2) NOT NULL,
  `producto_precio_final_por_cantidad` DECIMAL(12,2) NOT NULL,
  `cantidad` INT NOT NULL,
  `regla_porciento_orden` DECIMAL(10,0) NOT NULL,
  `tipo_oferta_orden` ENUM('+', '-') NOT NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `deleted_at` TIMESTAMP NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_orden_detalle_producto1_idx` (`producto_id` ASC),
  INDEX `fk_orden_detalle_ventas1_idx` (`ventas_id` ASC),
  CONSTRAINT `fk_orden_detalle_producto1`
    FOREIGN KEY (`producto_id`)
    REFERENCES `core`.`producto` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orden_detalle_ventas1`
    FOREIGN KEY (`ventas_id`)
    REFERENCES `core`.`venta` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `core`.`contact_phone`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`contact_phone` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `desc_tel` VARCHAR(255) NOT NULL,
  `numero_tel` VARCHAR(255) NOT NULL,
  `contacto_id` INT NOT NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `deleted_at` TIMESTAMP NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_telefono_contacto1_idx` (`contacto_id` ASC),
  CONSTRAINT `fk_telefono_contacto1`
    FOREIGN KEY (`contacto_id`)
    REFERENCES `core`.`contacto` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`contact_mail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`contact_mail` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `desc_mail` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `contacto_id` INT NOT NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `deleted_at` TIMESTAMP NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_correo_contacto1_idx` (`contacto_id` ASC),
  CONSTRAINT `fk_correo_contacto1`
    FOREIGN KEY (`contacto_id`)
    REFERENCES `core`.`contacto` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`usuario_empleado_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`usuario_empleado_info` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `estado` ENUM('0', '1') NULL,
  `salario` DECIMAL(12,2) NULL,
  `nivel` ENUM('contactos', 'mercado', 'productos', 'ordenes', 'empresa') NOT NULL,
  `users_id` INT(10) UNSIGNED NOT NULL,
  `empresa_id` INT NOT NULL,
  `tienda_id` INT NOT NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `deleted_at` TIMESTAMP NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_usuario_empleado_info_users1_idx` (`users_id` ASC),
  INDEX `fk_usuario_empleado_info_empresa1_idx` (`empresa_id` ASC),
  INDEX `fk_usuario_empleado_info_tienda1_idx` (`tienda_id` ASC),
  CONSTRAINT `fk_usuario_empleado_info_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `core`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuario_empleado_info_empresa1`
    FOREIGN KEY (`empresa_id`)
    REFERENCES `core`.`empresa` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuario_empleado_info_tienda1`
    FOREIGN KEY (`tienda_id`)
    REFERENCES `core`.`tienda` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_unicode_ci;


-- -----------------------------------------------------
-- Table `core`.`usuario_core`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`usuario_core` (
  `id` INT(5) UNSIGNED NOT NULL AUTO_INCREMENT,
  `empresa_id` INT NOT NULL,
  `users_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_usuario_core_empresa1_idx` (`empresa_id` ASC),
  INDEX `fk_usuario_core_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_usuario_core_empresa1`
    FOREIGN KEY (`empresa_id`)
    REFERENCES `core`.`empresa` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuario_core_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `core`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_unicode_ci;


-- -----------------------------------------------------
-- Table `core`.`contact_social`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`contact_social` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `red_social_nombre` VARCHAR(45) NULL,
  `url` VARCHAR(260) NULL,
  `contacto_id` INT NOT NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `deleted_at` TIMESTAMP NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_social_contacto1_idx` (`contacto_id` ASC),
  CONSTRAINT `fk_social_contacto1`
    FOREIGN KEY (`contacto_id`)
    REFERENCES `core`.`contacto` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`mercado_social`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`mercado_social` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `red_social_nombre` VARCHAR(45) NULL,
  `url` VARCHAR(260) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`logros`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`logros` (
  `id` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  `desc` VARCHAR(45) NULL,
  `img` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`empresa_has_usuario_cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`empresa_has_usuario_cliente` (
  `empresa_id` INT NOT NULL,
  `usuario_cliente_id` INT NOT NULL,
  PRIMARY KEY (`empresa_id`, `usuario_cliente_id`),
  INDEX `fk_empresa_has_usuario_cliente_empresa1_idx` (`empresa_id` ASC),
  CONSTRAINT `fk_empresa_has_usuario_cliente_empresa1`
    FOREIGN KEY (`empresa_id`)
    REFERENCES `core`.`empresa` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`mercado_social_has_empresa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`mercado_social_has_empresa` (
  `mercado_social_id` INT NOT NULL,
  `empresa_id` INT NOT NULL,
  PRIMARY KEY (`mercado_social_id`, `empresa_id`),
  INDEX `fk_mercado_social_has_empresa_empresa1_idx` (`empresa_id` ASC),
  INDEX `fk_mercado_social_has_empresa_mercado_social1_idx` (`mercado_social_id` ASC),
  CONSTRAINT `fk_mercado_social_has_empresa_mercado_social1`
    FOREIGN KEY (`mercado_social_id`)
    REFERENCES `core`.`mercado_social` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_mercado_social_has_empresa_empresa1`
    FOREIGN KEY (`empresa_id`)
    REFERENCES `core`.`empresa` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`empresa_has_producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`empresa_has_producto` (
  `empresa_id` INT NOT NULL,
  `producto_id` INT NOT NULL,
  PRIMARY KEY (`empresa_id`, `producto_id`),
  INDEX `fk_empresa_has_producto_producto1_idx` (`producto_id` ASC),
  INDEX `fk_empresa_has_producto_empresa1_idx` (`empresa_id` ASC),
  CONSTRAINT `fk_empresa_has_producto_empresa1`
    FOREIGN KEY (`empresa_id`)
    REFERENCES `core`.`empresa` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_empresa_has_producto_producto1`
    FOREIGN KEY (`producto_id`)
    REFERENCES `core`.`producto` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`empresa_has_categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`empresa_has_categoria` (
  `empresa_id` INT NOT NULL,
  `categoria_id` INT NOT NULL,
  PRIMARY KEY (`empresa_id`, `categoria_id`),
  INDEX `fk_empresa_has_categoria_categoria1_idx` (`categoria_id` ASC),
  INDEX `fk_empresa_has_categoria_empresa1_idx` (`empresa_id` ASC),
  CONSTRAINT `fk_empresa_has_categoria_empresa1`
    FOREIGN KEY (`empresa_id`)
    REFERENCES `core`.`empresa` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_empresa_has_categoria_categoria1`
    FOREIGN KEY (`categoria_id`)
    REFERENCES `core`.`categoria` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`producto_has_oferta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`producto_has_oferta` (
  `oferta_id` INT NOT NULL,
  PRIMARY KEY (`oferta_id`),
  INDEX `fk_producto_has_oferta_oferta1_idx` (`oferta_id` ASC),
  CONSTRAINT `fk_producto_has_oferta_oferta1`
    FOREIGN KEY (`oferta_id`)
    REFERENCES `core`.`oferta` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `core`.`empresa_has_oferta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`empresa_has_oferta` (
  `empresa_id` INT NOT NULL,
  `oferta_id` INT NOT NULL,
  PRIMARY KEY (`empresa_id`, `oferta_id`),
  INDEX `fk_empresa_has_oferta_oferta1_idx` (`oferta_id` ASC),
  INDEX `fk_empresa_has_oferta_empresa1_idx` (`empresa_id` ASC),
  CONSTRAINT `fk_empresa_has_oferta_empresa1`
    FOREIGN KEY (`empresa_id`)
    REFERENCES `core`.`empresa` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_empresa_has_oferta_oferta1`
    FOREIGN KEY (`oferta_id`)
    REFERENCES `core`.`oferta` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`users_has_asignado_users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`users_has_asignado_users` (
  `users_id` INT(10) UNSIGNED NOT NULL,
  `users_id_cliente` INT(10) UNSIGNED NOT NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `deleted_at` TIMESTAMP NULL,
  PRIMARY KEY (`users_id`, `users_id_cliente`),
  INDEX `fk_users_has_users_users2_idx` (`users_id_cliente` ASC),
  INDEX `fk_users_has_users_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_users_has_users_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `core`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_users_users2`
    FOREIGN KEY (`users_id_cliente`)
    REFERENCES `core`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_unicode_ci;


-- -----------------------------------------------------
-- Table `core`.`oferta_to_cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`oferta_to_cliente` (
  `id` INT NOT NULL,
  `estado` ENUM('realizada', 'no realizada') NOT NULL,
  `orden_detalle_id` INT NOT NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `users_id` INT(10) UNSIGNED NOT NULL,
  `users_id_cliente` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_oferta_to_cliente_orden_detalle1_idx` (`orden_detalle_id` ASC),
  INDEX `fk_oferta_to_cliente_users_has_asignado_users1_idx` (`users_id` ASC, `users_id_cliente` ASC),
  CONSTRAINT `fk_oferta_to_cliente_orden_detalle1`
    FOREIGN KEY (`orden_detalle_id`)
    REFERENCES `core`.`orden_detalle` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_oferta_to_cliente_users_has_asignado_users1`
    FOREIGN KEY (`users_id` , `users_id_cliente`)
    REFERENCES `core`.`users_has_asignado_users` (`users_id` , `users_id_cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`img_producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`img_producto` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `img` VARCHAR(255) NULL,
  `producto_id` INT NOT NULL,
  `principal` ENUM('0', '1') NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `deleted_at` TIMESTAMP NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_img_producto_producto1_idx` (`producto_id` ASC),
  CONSTRAINT `fk_img_producto_producto1`
    FOREIGN KEY (`producto_id`)
    REFERENCES `core`.`producto` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`empresa_has_fabricante`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`empresa_has_fabricante` (
  `empresa_id` INT NOT NULL,
  `fabricante_id` INT NOT NULL,
  PRIMARY KEY (`empresa_id`, `fabricante_id`),
  INDEX `fk_empresa_has_fabricante_fabricante1_idx` (`fabricante_id` ASC),
  INDEX `fk_empresa_has_fabricante_empresa1_idx` (`empresa_id` ASC),
  CONSTRAINT `fk_empresa_has_fabricante_empresa1`
    FOREIGN KEY (`empresa_id`)
    REFERENCES `core`.`empresa` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_empresa_has_fabricante_fabricante1`
    FOREIGN KEY (`fabricante_id`)
    REFERENCES `core`.`fabricante` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`usuario_core_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`usuario_core_info` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `salario` DECIMAL(10,0) NULL,
  `nivel` ENUM('contactos', 'mercado', 'productos', 'ordenes', 'empresa') NOT NULL,
  `usuario_core_id` INT(5) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_usuario_core_info_usuario_core1_idx` (`usuario_core_id` ASC),
  CONSTRAINT `fk_usuario_core_info_usuario_core1`
    FOREIGN KEY (`usuario_core_id`)
    REFERENCES `core`.`usuario_core` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`chat`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`chat` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `text` VARCHAR(45) NULL,
  `doc` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`notes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`notes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `content` VARCHAR(255) NOT NULL,
  `users_id` INT(10) UNSIGNED NOT NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `deleted_at` TIMESTAMP NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_notas_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_notas_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `core`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`perfil`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`perfil` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `rol` ENUM('company', 'normal') NULL,
  `perfil_route` VARCHAR(250) NOT NULL,
  `cover` VARCHAR(250) NOT NULL,
  `sobre_mi` VARCHAR(250) NULL,
  `aptitudes` VARCHAR(250) NULL,
  `apodo` VARCHAR(250) NULL,
  `cita_favorita` VARCHAR(250) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `perfil_route_UNIQUE` (`perfil_route` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`empresa_has_tienda`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`empresa_has_tienda` (
  `empresa_id` INT NOT NULL,
  `tienda_id` INT NOT NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `deleted_at` TIMESTAMP NULL,
  PRIMARY KEY (`empresa_id`, `tienda_id`),
  INDEX `fk_empresa_has_tienda_tienda1_idx` (`tienda_id` ASC),
  INDEX `fk_empresa_has_tienda_empresa1_idx` (`empresa_id` ASC),
  CONSTRAINT `fk_empresa_has_tienda_empresa1`
    FOREIGN KEY (`empresa_id`)
    REFERENCES `core`.`empresa` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_empresa_has_tienda_tienda1`
    FOREIGN KEY (`tienda_id`)
    REFERENCES `core`.`tienda` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`empresa_has_usuario_contacto_principal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`empresa_has_usuario_contacto_principal` (
  `empresa_id` INT NOT NULL,
  `users_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`empresa_id`),
  INDEX `fk_empresa_has_usuario_contacto_principal_empresa1_idx` (`empresa_id` ASC),
  INDEX `fk_empresa_has_usuario_contacto_principal_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_empresa_has_usuario_contacto_principal_empresa1`
    FOREIGN KEY (`empresa_id`)
    REFERENCES `core`.`empresa` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_empresa_has_usuario_contacto_principal_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `core`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`orden_general`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`orden_general` (
  `id` INT NOT NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`orden_general_has_orden_detalle`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`orden_general_has_orden_detalle` (
  `id` INT NOT NULL,
  `orden_detalle_id` INT NOT NULL,
  PRIMARY KEY (`id`, `orden_detalle_id`),
  INDEX `fk_orden_general_has_orden_detalle_orden_detalle1_idx` (`orden_detalle_id` ASC),
  INDEX `fk_orden_general_has_orden_detalle_orden_general1_idx` (`id` ASC),
  CONSTRAINT `fk_orden_general_has_orden_detalle_orden_general1`
    FOREIGN KEY (`id`)
    REFERENCES `core`.`orden_general` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orden_general_has_orden_detalle_orden_detalle1`
    FOREIGN KEY (`orden_detalle_id`)
    REFERENCES `core`.`orden_detalle` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`empresa_has_venta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`empresa_has_venta` (
  `empresa_id` INT NOT NULL,
  `orden_general_id` INT NOT NULL,
  `orden_id` INT NOT NULL,
  `orden_general_has_orden_detalle_orden_general_id` INT NOT NULL,
  `orden_general_has_orden_detalle_orden_detalle_id` INT NOT NULL,
  `users_id` INT(10) UNSIGNED NOT NULL,
  `orden_detalle_general_id` INT NOT NULL,
  PRIMARY KEY (`empresa_id`, `orden_general_id`),
  INDEX `fk_empresa_has_orden_general_orden_general1_idx` (`orden_general_id` ASC),
  INDEX `fk_empresa_has_orden_general_empresa1_idx` (`empresa_id` ASC),
  INDEX `fk_empresa_has_orden_general_orden1_idx` (`orden_id` ASC),
  INDEX `fk_empresa_has_orden_general_orden_general_has_orden_detall_idx` (`orden_general_has_orden_detalle_orden_general_id` ASC, `orden_general_has_orden_detalle_orden_detalle_id` ASC),
  INDEX `fk_empresa_has_orden_general_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_empresa_has_orden_general_empresa1`
    FOREIGN KEY (`empresa_id`)
    REFERENCES `core`.`empresa` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_empresa_has_orden_general_orden_general1`
    FOREIGN KEY (`orden_general_id`)
    REFERENCES `core`.`orden_general` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_empresa_has_orden_general_orden1`
    FOREIGN KEY (`orden_id`)
    REFERENCES `core`.`orden_envio` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_empresa_has_orden_general_orden_general_has_orden_detalle1`
    FOREIGN KEY (`orden_general_has_orden_detalle_orden_general_id` , `orden_general_has_orden_detalle_orden_detalle_id`)
    REFERENCES `core`.`orden_general_has_orden_detalle` (`id` , `orden_detalle_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_empresa_has_orden_general_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `core`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`users_has_perfil`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`users_has_perfil` (
  `users_id` INT(10) UNSIGNED NOT NULL,
  `perfil_id` INT NOT NULL,
  PRIMARY KEY (`users_id`, `perfil_id`),
  INDEX `fk_users_has_perfil_perfil1_idx` (`perfil_id` ASC),
  INDEX `fk_users_has_perfil_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_users_has_perfil_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `core`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_perfil_perfil1`
    FOREIGN KEY (`perfil_id`)
    REFERENCES `core`.`perfil` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_unicode_ci;


-- -----------------------------------------------------
-- Table `core`.`users_has_follower_users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`users_has_follower_users` (
  `users_id` INT(10) UNSIGNED NOT NULL,
  `users_id_followers` INT(10) UNSIGNED NOT NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `deleted_at` TIMESTAMP NULL,
  PRIMARY KEY (`users_id`, `users_id_followers`),
  INDEX `fk_users_has_users_users4_idx` (`users_id_followers` ASC),
  INDEX `fk_users_has_users_users3_idx` (`users_id` ASC),
  CONSTRAINT `fk_users_has_users_users3`
    FOREIGN KEY (`users_id`)
    REFERENCES `core`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_users_users4`
    FOREIGN KEY (`users_id_followers`)
    REFERENCES `core`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_unicode_ci;


-- -----------------------------------------------------
-- Table `core`.`users_has_friend_users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`users_has_friend_users` (
  `users_id` INT(10) UNSIGNED NOT NULL,
  `users_id_friend` INT(10) UNSIGNED NOT NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `deleted_at` TIMESTAMP NULL,
  PRIMARY KEY (`users_id`, `users_id_friend`),
  INDEX `fk_users_has_users_users6_idx` (`users_id_friend` ASC),
  INDEX `fk_users_has_users_users5_idx` (`users_id` ASC),
  CONSTRAINT `fk_users_has_users_users5`
    FOREIGN KEY (`users_id`)
    REFERENCES `core`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_users_users6`
    FOREIGN KEY (`users_id_friend`)
    REFERENCES `core`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_unicode_ci;


-- -----------------------------------------------------
-- Table `core`.`users_has_agenda_contactos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`users_has_agenda_contactos` (
  `users_id` INT(10) UNSIGNED NOT NULL,
  `contacto_id` INT NOT NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `deleted_at` TIMESTAMP NULL,
  PRIMARY KEY (`users_id`, `contacto_id`),
  INDEX `fk_users_has_contacto_contacto1_idx` (`contacto_id` ASC),
  INDEX `fk_users_has_contacto_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_users_has_contacto_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `core`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_contacto_contacto1`
    FOREIGN KEY (`contacto_id`)
    REFERENCES `core`.`contacto` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_unicode_ci;


-- -----------------------------------------------------
-- Table `core`.`users_has_chat_with_users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`users_has_chat_with_users` (
  `users_id` INT(10) UNSIGNED NOT NULL,
  `chat_id` INT NOT NULL,
  `users_id1` INT(10) UNSIGNED NOT NULL,
  INDEX `fk_users_has_chat_with_users_users1_idx` (`users_id` ASC),
  INDEX `fk_users_has_chat_with_users_chat1_idx` (`chat_id` ASC),
  INDEX `fk_users_has_chat_with_users_users2_idx` (`users_id1` ASC),
  CONSTRAINT `fk_users_has_chat_with_users_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `core`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_chat_with_users_chat1`
    FOREIGN KEY (`chat_id`)
    REFERENCES `core`.`chat` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_chat_with_users_users2`
    FOREIGN KEY (`users_id1`)
    REFERENCES `core`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`users_has_logros`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`users_has_logros` (
  `logros_id` INT NOT NULL,
  `usuario_empleado_info_id` INT NOT NULL,
  PRIMARY KEY (`logros_id`),
  INDEX `fk_users_has_logros_logros1_idx` (`logros_id` ASC),
  INDEX `fk_users_has_logros_usuario_empleado_info1_idx` (`usuario_empleado_info_id` ASC),
  CONSTRAINT `fk_users_has_logros_logros1`
    FOREIGN KEY (`logros_id`)
    REFERENCES `core`.`logros` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_logros_usuario_empleado_info1`
    FOREIGN KEY (`usuario_empleado_info_id`)
    REFERENCES `core`.`usuario_empleado_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_unicode_ci;


-- -----------------------------------------------------
-- Table `core`.`empresa_has_perfil`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`empresa_has_perfil` (
  `empresa_id` INT NOT NULL,
  `perfil_id` INT NOT NULL,
  PRIMARY KEY (`empresa_id`, `perfil_id`),
  INDEX `fk_empresa_has_perfil_perfil1_idx` (`perfil_id` ASC),
  INDEX `fk_empresa_has_perfil_empresa1_idx` (`empresa_id` ASC),
  CONSTRAINT `fk_empresa_has_perfil_empresa1`
    FOREIGN KEY (`empresa_id`)
    REFERENCES `core`.`empresa` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_empresa_has_perfil_perfil1`
    FOREIGN KEY (`perfil_id`)
    REFERENCES `core`.`perfil` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`users_has_orden`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`users_has_orden` (
  `users_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`users_id`),
  INDEX `fk_users_has_orden_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_users_has_orden_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `core`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_unicode_ci;


-- -----------------------------------------------------
-- Table `core`.`empresa_has_users_client`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`empresa_has_users_client` (
  `empresa_id` INT NOT NULL,
  `users_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`empresa_id`, `users_id`),
  INDEX `fk_empresa_has_users_users2_idx` (`users_id` ASC),
  INDEX `fk_empresa_has_users_empresa2_idx` (`empresa_id` ASC),
  CONSTRAINT `fk_empresa_has_users_empresa2`
    FOREIGN KEY (`empresa_id`)
    REFERENCES `core`.`empresa` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_empresa_has_users_users2`
    FOREIGN KEY (`users_id`)
    REFERENCES `core`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`post`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`post` (
  `idpost` INT NOT NULL,
  `perfil_id` INT NOT NULL,
  `users_id` INT(10) UNSIGNED NOT NULL,
  `created_at` TIMESTAMP NULL,
  `update_at` TIMESTAMP NULL,
  `deletead_at` TIMESTAMP NULL,
  PRIMARY KEY (`idpost`),
  INDEX `fk_post_perfil1_idx` (`perfil_id` ASC),
  INDEX `fk_post_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_post_perfil1`
    FOREIGN KEY (`perfil_id`)
    REFERENCES `core`.`perfil` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_post_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `core`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`text`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`text` (
  `idtext` INT NOT NULL,
  PRIMARY KEY (`idtext`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`foto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`foto` (
  `idfoto` INT NOT NULL,
  PRIMARY KEY (`idfoto`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`video` (
  `idvideo` INT NOT NULL,
  PRIMARY KEY (`idvideo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`archivo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`archivo` (
  `idarchivo` INT NOT NULL,
  PRIMARY KEY (`idarchivo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`post_has_text`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`post_has_text` (
  `post_idpost` INT NOT NULL,
  `text_idtext` INT NOT NULL,
  PRIMARY KEY (`post_idpost`, `text_idtext`),
  INDEX `fk_post_has_text_text1_idx` (`text_idtext` ASC),
  INDEX `fk_post_has_text_post1_idx` (`post_idpost` ASC),
  CONSTRAINT `fk_post_has_text_post1`
    FOREIGN KEY (`post_idpost`)
    REFERENCES `core`.`post` (`idpost`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_post_has_text_text1`
    FOREIGN KEY (`text_idtext`)
    REFERENCES `core`.`text` (`idtext`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`post_has_archivo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`post_has_archivo` (
  `post_idpost` INT NOT NULL,
  `archivo_idarchivo` INT NOT NULL,
  PRIMARY KEY (`post_idpost`, `archivo_idarchivo`),
  INDEX `fk_post_has_archivo_archivo1_idx` (`archivo_idarchivo` ASC),
  INDEX `fk_post_has_archivo_post1_idx` (`post_idpost` ASC),
  CONSTRAINT `fk_post_has_archivo_post1`
    FOREIGN KEY (`post_idpost`)
    REFERENCES `core`.`post` (`idpost`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_post_has_archivo_archivo1`
    FOREIGN KEY (`archivo_idarchivo`)
    REFERENCES `core`.`archivo` (`idarchivo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`post_has_foto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`post_has_foto` (
  `post_idpost` INT NOT NULL,
  `foto_idfoto` INT NOT NULL,
  PRIMARY KEY (`post_idpost`, `foto_idfoto`),
  INDEX `fk_post_has_foto_foto1_idx` (`foto_idfoto` ASC),
  INDEX `fk_post_has_foto_post1_idx` (`post_idpost` ASC),
  CONSTRAINT `fk_post_has_foto_post1`
    FOREIGN KEY (`post_idpost`)
    REFERENCES `core`.`post` (`idpost`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_post_has_foto_foto1`
    FOREIGN KEY (`foto_idfoto`)
    REFERENCES `core`.`foto` (`idfoto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`post_has_video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`post_has_video` (
  `post_idpost` INT NOT NULL,
  `video_idvideo` INT NOT NULL,
  PRIMARY KEY (`post_idpost`, `video_idvideo`),
  INDEX `fk_post_has_video_video1_idx` (`video_idvideo` ASC),
  INDEX `fk_post_has_video_post1_idx` (`post_idpost` ASC),
  CONSTRAINT `fk_post_has_video_post1`
    FOREIGN KEY (`post_idpost`)
    REFERENCES `core`.`post` (`idpost`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_post_has_video_video1`
    FOREIGN KEY (`video_idvideo`)
    REFERENCES `core`.`video` (`idvideo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`comment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`comment` (
  `idcomment` INT NOT NULL,
  `users_id` INT(10) UNSIGNED NOT NULL,
  `created_at` TIMESTAMP NULL,
  `update_at` TIMESTAMP NULL,
  `deleted_at` TIMESTAMP NULL,
  PRIMARY KEY (`idcomment`),
  INDEX `fk_comment_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_comment_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `core`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`post_has_comment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`post_has_comment` (
  `post_idpost` INT NOT NULL,
  `comment_idcomment` INT NOT NULL,
  PRIMARY KEY (`post_idpost`, `comment_idcomment`),
  INDEX `fk_post_has_comment_comment1_idx` (`comment_idcomment` ASC),
  INDEX `fk_post_has_comment_post1_idx` (`post_idpost` ASC),
  CONSTRAINT `fk_post_has_comment_post1`
    FOREIGN KEY (`post_idpost`)
    REFERENCES `core`.`post` (`idpost`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_post_has_comment_comment1`
    FOREIGN KEY (`comment_idcomment`)
    REFERENCES `core`.`comment` (`idcomment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`comment_has_video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`comment_has_video` (
  `comment_idcomment` INT NOT NULL,
  `video_idvideo` INT NOT NULL,
  PRIMARY KEY (`comment_idcomment`, `video_idvideo`),
  INDEX `fk_comment_has_video_video1_idx` (`video_idvideo` ASC),
  INDEX `fk_comment_has_video_comment1_idx` (`comment_idcomment` ASC),
  CONSTRAINT `fk_comment_has_video_comment1`
    FOREIGN KEY (`comment_idcomment`)
    REFERENCES `core`.`comment` (`idcomment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comment_has_video_video1`
    FOREIGN KEY (`video_idvideo`)
    REFERENCES `core`.`video` (`idvideo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`comment_has_foto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`comment_has_foto` (
  `comment_idcomment` INT NOT NULL,
  `foto_idfoto` INT NOT NULL,
  PRIMARY KEY (`comment_idcomment`, `foto_idfoto`),
  INDEX `fk_comment_has_foto_foto1_idx` (`foto_idfoto` ASC),
  INDEX `fk_comment_has_foto_comment1_idx` (`comment_idcomment` ASC),
  CONSTRAINT `fk_comment_has_foto_comment1`
    FOREIGN KEY (`comment_idcomment`)
    REFERENCES `core`.`comment` (`idcomment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comment_has_foto_foto1`
    FOREIGN KEY (`foto_idfoto`)
    REFERENCES `core`.`foto` (`idfoto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`comment_has_archivo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`comment_has_archivo` (
  `comment_idcomment` INT NOT NULL,
  `archivo_idarchivo` INT NOT NULL,
  PRIMARY KEY (`comment_idcomment`, `archivo_idarchivo`),
  INDEX `fk_comment_has_archivo_archivo1_idx` (`archivo_idarchivo` ASC),
  INDEX `fk_comment_has_archivo_comment1_idx` (`comment_idcomment` ASC),
  CONSTRAINT `fk_comment_has_archivo_comment1`
    FOREIGN KEY (`comment_idcomment`)
    REFERENCES `core`.`comment` (`idcomment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comment_has_archivo_archivo1`
    FOREIGN KEY (`archivo_idarchivo`)
    REFERENCES `core`.`archivo` (`idarchivo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`comment_has_text`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`comment_has_text` (
  `comment_idcomment` INT NOT NULL,
  `text_idtext` INT NOT NULL,
  PRIMARY KEY (`comment_idcomment`, `text_idtext`),
  INDEX `fk_comment_has_text_text1_idx` (`text_idtext` ASC),
  INDEX `fk_comment_has_text_comment1_idx` (`comment_idcomment` ASC),
  CONSTRAINT `fk_comment_has_text_comment1`
    FOREIGN KEY (`comment_idcomment`)
    REFERENCES `core`.`comment` (`idcomment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comment_has_text_text1`
    FOREIGN KEY (`text_idtext`)
    REFERENCES `core`.`text` (`idtext`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`notes_has_users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`notes_has_users` (
  `notes_id` INT NOT NULL,
  `users_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`notes_id`, `users_id`),
  INDEX `fk_notes_has_users_users1_idx` (`users_id` ASC),
  INDEX `fk_notes_has_users_notes1_idx` (`notes_id` ASC),
  CONSTRAINT `fk_notes_has_users_notes1`
    FOREIGN KEY (`notes_id`)
    REFERENCES `core`.`notes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_notes_has_users_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `core`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`contact_has_coment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`contact_has_coment` (
  `id` INT NOT NULL,
  `content` VARCHAR(255) NULL,
  `contacto_id` INT NOT NULL,
  `users_id` INT(10) UNSIGNED NOT NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `deleted_at` TIMESTAMP NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_contact_has_coment_contacto1_idx` (`contacto_id` ASC),
  INDEX `fk_contact_has_coment_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_contact_has_coment_contacto1`
    FOREIGN KEY (`contacto_id`)
    REFERENCES `core`.`contacto` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_contact_has_coment_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `core`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `core`.`tienda_has_producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `core`.`tienda_has_producto` (
  `tienda_id` INT NOT NULL,
  `producto_id` INT NOT NULL,
  PRIMARY KEY (`tienda_id`, `producto_id`),
  INDEX `fk_tienda_has_producto_producto1_idx` (`producto_id` ASC),
  INDEX `fk_tienda_has_producto_tienda1_idx` (`tienda_id` ASC),
  CONSTRAINT `fk_tienda_has_producto_tienda1`
    FOREIGN KEY (`tienda_id`)
    REFERENCES `core`.`tienda` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tienda_has_producto_producto1`
    FOREIGN KEY (`producto_id`)
    REFERENCES `core`.`producto` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
